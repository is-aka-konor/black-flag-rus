blackFlag-inventory, blackFlag-currency, blackFlag-effects {
	--inventory-image-size: 25px;
	display: block;
	container: inventory / inline-size;

	table {
		border: none;
		background: none;

		thead {
			border: none;
			background: none;
			color: var(--color-text-dark-1);
			text-shadow: none;

			tr:has(blackFlag-filters) {
				th {
					padding: 0;
					padding-inline: 4px;
					padding-block-end: 2px;
				}
			}
		}

		tbody {
			tr {
				:is(td, th) {
					position: relative;
					padding-inline: 0.25rem;
					font-size: var(--font-size-12);

					> div.layout {
						display: flex;
						align-items: center;
						gap: 0.5rem;
					}
				}
				:is(td, th):not(:first-child, :last-child)::after {
					content: "";
					position: absolute;
					right: 0;
					top: 0;
					bottom: 0;
					border-inline-end: 1px solid var(--bf-color-border-gray);
					mask-image: linear-gradient(to bottom, transparent, #000 30% 70%, transparent);
				}
			}

			> tr:first-child {
				position: relative;
				border: 2px inset color-mix(in oklab, var(--bf-color-border-blue), white 40%);
				font-family: var(--bf-font-header);
				font-weight: 600;

				&::after {
					content: "";
					position: absolute;
					inset: 3px;
					border: 1px solid var(--bf-color-border-gray);
					box-shadow: 0px 0px 3px rgb(0 0 0 / 0.25);
					z-index: 0;
				}

				> * {
					z-index: 1;
				}
				.name {
					padding-inline-start: 0.5rem;
					font-variant: small-caps;
				}
			}

			> tr:not(:first-child) {
				--background-gradient-color: transparent;
				--background-base-color: transparent;

				background: linear-gradient(
					to right,
					transparent 33%,
					color-mix(in oklab, var(--background-gradient-color), transparent 90%)
				) var(--background-base-color);

				&:nth-child(odd of [data-item-id]) {
					--background-base-color: rgb(255 255 255 / .2);
				}

				.name {
					img {
						width: var(--inventory-image-size);
						height: var(--inventory-image-size);
						border: none;
						background-color: black;
					}
				}
				.components {
					padding-inline-end: 0.5rem;

					> .layout {
						justify-content: flex-end;
					}
				}

				[data-action="expand"] .fa-caret-down { opacity: .7; }
				&:has(+ [data-expand-for]) [data-action="expand"] .fa-caret-down { transition: transform 250ms ease; }
				&:has(+ [data-expand-for].collapsed) [data-action="expand"] .fa-caret-down { transform: rotate(-90deg); }

				&[data-expand-for] {
					td { padding: 0; }
					.item-summary {
						position: relative;
						margin-block-end: 8px;
						margin-inline: 6px;
						border: 1px solid var(--bf-color-border-blue);
						border-block-start-width: 0;
						border-end-start-radius: 8px;
						border-end-end-radius: 8px;
						padding-block: 2px;
						padding-inline: 8px;
						background: rgb(255 255 255 / 0.5);
						box-shadow: 0 2px 3px rgb(0 0 0 / .2);

						&::before {
							content: "";
							position: absolute;
							inset-inline: -6px;
							inset-block-start: -10px;
							height: 10px;
							box-shadow: 0 3px 3px rgb(0 0 0 / .2);
						}
					}
				}
			}
		}
	}

	[data-action="adjustment"]:not(:hover) {
		opacity: 50%;
	}

	.weight, .quantity, .cost, .enabled {
		text-align: center;
	}
	.quantity {
		width: 85px;
		input {
			border: none;
			height: 1.65em;
		}
	}
	.uses, .weight, .cost {
		width: 60px;
	}
	.traits {
		width: 14rem;
		td:is(&) {
			font-size: var(--font-size-11);
		}
	}
	.status {
		&.fade:not([aria-pressed="true"], :hover, :focus-visible) { opacity: 30%; }
	}
	.controls {
		width: 1em;
		.layout {
			justify-content: center;
		}
	}

	@container inventory (inline-size < 700px) {
		.traits { display: none; }
	}
	@container inventory (inline-size < 500px) {
		.uses { display: none; }
	}
}

.add-currency.locked-tooltip {
	form {
		display: grid;
		grid-template-columns: max-content 1fr;
		gap: 6px;
	}
	label {
		grid-column: 1 / -1;
		display: grid;
		grid-template-columns: subgrid;
		align-items: center;
	}
	input {
		color: inherit;
	}
}
